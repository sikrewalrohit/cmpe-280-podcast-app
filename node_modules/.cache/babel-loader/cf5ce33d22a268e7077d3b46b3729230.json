{"ast":null,"code":"import axios from \"axios\";\nimport { TOKEN_KEY } from \"../store/authContext\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000\"\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(TOKEN_KEY);\n\n  if (token) {\n    config.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n}); // Handle authentication errors\n\ninstance.interceptors.response.use(res => res, err => {\n  var _err$response;\n\n  // Allow 401's from these URLs\n  const whitelist = [\"/api/login\", \"/api/register\", \"/api/password_reset\"];\n\n  if (!whitelist.includes(err.response.config.url)) {\n    if (err.response.status === 401) {\n      localStorage.removeItem(TOKEN_KEY);\n      window.location.href = \"/#/auth\";\n      return;\n    }\n  }\n\n  if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 429) {\n    window.location.href = \"/#/rate_limit\";\n  }\n\n  return Promise.reject(err);\n});\nexport default instance;","map":{"version":3,"names":["axios","TOKEN_KEY","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","common","err","Promise","reject","response","res","whitelist","includes","url","status","removeItem","window","location","href"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast-app/src/config/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport { TOKEN_KEY } from \"../store/authContext\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000\",\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(TOKEN_KEY);\n\n    if (token) {\n      config.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\n// Handle authentication errors\ninstance.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    // Allow 401's from these URLs\n    const whitelist = [\"/api/login\", \"/api/register\", \"/api/password_reset\"];\n\n    if (!whitelist.includes(err.response.config.url)) {\n      if (err.response.status === 401) {\n        localStorage.removeItem(TOKEN_KEY);\n        window.location.href = \"/#/auth\";\n        return;\n      }\n    }\n\n    if (err?.response?.status === 429) {\n      window.location.href = \"/#/rate_limit\";\n    }\n\n    return Promise.reject(err);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC5BC,OAAO,EAAE;AADmB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACGC,MAAD,IAAY;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBV,SAArB,CAAd;;EAEA,IAAIQ,KAAJ,EAAW;IACTD,MAAM,CAACI,OAAP,CAAeC,MAAf,CAAsB,eAAtB,IAA0C,UAASJ,KAAM,EAAzD;EACD;;EAED,OAAOD,MAAP;AACD,CATH,EAUGM,GAAD,IAAS;EACP,OAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAZH,E,CAeA;;AACAZ,QAAQ,CAACG,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CACGW,GAAD,IAASA,GADX,EAEGJ,GAAD,IAAS;EAAA;;EACP;EACA,MAAMK,SAAS,GAAG,CAAC,YAAD,EAAe,eAAf,EAAgC,qBAAhC,CAAlB;;EAEA,IAAI,CAACA,SAAS,CAACC,QAAV,CAAmBN,GAAG,CAACG,QAAJ,CAAaT,MAAb,CAAoBa,GAAvC,CAAL,EAAkD;IAChD,IAAIP,GAAG,CAACG,QAAJ,CAAaK,MAAb,KAAwB,GAA5B,EAAiC;MAC/BZ,YAAY,CAACa,UAAb,CAAwBtB,SAAxB;MACAuB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;MACA;IACD;EACF;;EAED,IAAI,CAAAZ,GAAG,SAAH,IAAAA,GAAG,WAAH,6BAAAA,GAAG,CAAEG,QAAL,gEAAeK,MAAf,MAA0B,GAA9B,EAAmC;IACjCE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,eAAvB;EACD;;EAED,OAAOX,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAnBH;AAsBA,eAAeZ,QAAf"},"metadata":{},"sourceType":"module"}