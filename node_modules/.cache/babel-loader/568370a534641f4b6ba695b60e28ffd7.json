{"ast":null,"code":"import axios from \"@/config/axios\";\n\nclass SubscriptionsService {\n  async getSubscriptions() {\n    const response = await axios.get(`/api/subscriptions`);\n\n    if (response.status !== 200 || response.data.subscriptions.length === 0) {\n      throw new Error(\"No subscriptions\");\n    }\n\n    return response.data.subscriptions.sort((a, b) => a.title - b.title);\n  }\n\n  async getSubscriptionById(id, limit) {\n    try {\n      const response = await axios.get(`/api/subscriptions/${id}?limit=${limit}`);\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async getEpisodes(subscriptionId) {\n    try {\n      const response = await axios.get(`/api/subscriptions/${subscriptionId}/episodes`);\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async getEpisodeByGuid(subscriptionId, guid) {\n    try {\n      const response = await axios.get(`/api/subscriptions/${subscriptionId}/episodes/${encodeURIComponent(guid)}`);\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async addSubscription(feedUrl) {\n    try {\n      const response = await axios.post(`/api/subscriptions`, {\n        feedUrl\n      });\n      return response.data.result;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async removeSubscription(id) {\n    try {\n      await axios.delete(`/api/subscriptions/${id}`);\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n}\n\nfunction genericErrorHandler(err) {\n  var _err$response, _err$response$data;\n\n  if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.msg) {\n    return err.response.data.msg;\n  } else {\n    return \"There was a problem with the network\";\n  }\n}\n\nexport default new SubscriptionsService();","map":{"version":3,"names":["axios","SubscriptionsService","getSubscriptions","response","get","status","data","subscriptions","length","Error","sort","a","b","title","getSubscriptionById","id","limit","err","genericErrorHandler","getEpisodes","subscriptionId","getEpisodeByGuid","guid","encodeURIComponent","addSubscription","feedUrl","post","result","removeSubscription","delete","msg"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast/src/services/subscriptionsService.js"],"sourcesContent":["import axios from \"@/config/axios\";\n\nclass SubscriptionsService {\n  async getSubscriptions() {\n    const response = await axios.get(`/api/subscriptions`);\n\n    if (response.status !== 200 || response.data.subscriptions.length === 0) {\n      throw new Error(\"No subscriptions\");\n    }\n\n    return response.data.subscriptions.sort((a, b) => a.title - b.title);\n  }\n\n  async getSubscriptionById(id, limit) {\n    try {\n      const response = await axios.get(`/api/subscriptions/${id}?limit=${limit}`);\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async getEpisodes(subscriptionId) {\n    try {\n      const response = await axios.get(`/api/subscriptions/${subscriptionId}/episodes`);\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async getEpisodeByGuid(subscriptionId, guid) {\n    try {\n      const response = await axios.get(\n        `/api/subscriptions/${subscriptionId}/episodes/${encodeURIComponent(guid)}`\n      );\n      return response.data;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async addSubscription(feedUrl) {\n    try {\n      const response = await axios.post(`/api/subscriptions`, {\n        feedUrl,\n      });\n\n      return response.data.result;\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n\n  async removeSubscription(id) {\n    try {\n      await axios.delete(`/api/subscriptions/${id}`);\n    } catch (err) {\n      return genericErrorHandler(err);\n    }\n  }\n}\n\nfunction genericErrorHandler(err) {\n  if (err.response?.data?.msg) {\n    return err.response.data.msg;\n  } else {\n    return \"There was a problem with the network\";\n  }\n}\n\nexport default new SubscriptionsService();\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,oBAAN,CAA2B;EACH,MAAhBC,gBAAgB,GAAG;IACvB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,oBAAX,CAAvB;;IAEA,IAAID,QAAQ,CAACE,MAAT,KAAoB,GAApB,IAA2BF,QAAQ,CAACG,IAAT,CAAcC,aAAd,CAA4BC,MAA5B,KAAuC,CAAtE,EAAyE;MACvE,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;IACD;;IAED,OAAON,QAAQ,CAACG,IAAT,CAAcC,aAAd,CAA4BG,IAA5B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAvD,CAAP;EACD;;EAEwB,MAAnBC,mBAAmB,CAACC,EAAD,EAAKC,KAAL,EAAY;IACnC,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,sBAAqBW,EAAG,UAASC,KAAM,EAAlD,CAAvB;MACA,OAAOb,QAAQ,CAACG,IAAhB;IACD,CAHD,CAGE,OAAOW,GAAP,EAAY;MACZ,OAAOC,mBAAmB,CAACD,GAAD,CAA1B;IACD;EACF;;EAEgB,MAAXE,WAAW,CAACC,cAAD,EAAiB;IAChC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,sBAAqBgB,cAAe,WAA/C,CAAvB;MACA,OAAOjB,QAAQ,CAACG,IAAhB;IACD,CAHD,CAGE,OAAOW,GAAP,EAAY;MACZ,OAAOC,mBAAmB,CAACD,GAAD,CAA1B;IACD;EACF;;EAEqB,MAAhBI,gBAAgB,CAACD,cAAD,EAAiBE,IAAjB,EAAuB;IAC3C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,sBAAqBgB,cAAe,aAAYG,kBAAkB,CAACD,IAAD,CAAO,EADrD,CAAvB;MAGA,OAAOnB,QAAQ,CAACG,IAAhB;IACD,CALD,CAKE,OAAOW,GAAP,EAAY;MACZ,OAAOC,mBAAmB,CAACD,GAAD,CAA1B;IACD;EACF;;EAEoB,MAAfO,eAAe,CAACC,OAAD,EAAU;IAC7B,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAMH,KAAK,CAAC0B,IAAN,CAAY,oBAAZ,EAAiC;QACtDD;MADsD,CAAjC,CAAvB;MAIA,OAAOtB,QAAQ,CAACG,IAAT,CAAcqB,MAArB;IACD,CAND,CAME,OAAOV,GAAP,EAAY;MACZ,OAAOC,mBAAmB,CAACD,GAAD,CAA1B;IACD;EACF;;EAEuB,MAAlBW,kBAAkB,CAACb,EAAD,EAAK;IAC3B,IAAI;MACF,MAAMf,KAAK,CAAC6B,MAAN,CAAc,sBAAqBd,EAAG,EAAtC,CAAN;IACD,CAFD,CAEE,OAAOE,GAAP,EAAY;MACZ,OAAOC,mBAAmB,CAACD,GAAD,CAA1B;IACD;EACF;;AA1DwB;;AA6D3B,SAASC,mBAAT,CAA6BD,GAA7B,EAAkC;EAAA;;EAChC,qBAAIA,GAAG,CAACd,QAAR,gEAAI,cAAcG,IAAlB,+CAAI,mBAAoBwB,GAAxB,EAA6B;IAC3B,OAAOb,GAAG,CAACd,QAAJ,CAAaG,IAAb,CAAkBwB,GAAzB;EACD,CAFD,MAEO;IACL,OAAO,sCAAP;EACD;AACF;;AAED,eAAe,IAAI7B,oBAAJ,EAAf"},"metadata":{},"sourceType":"module"}