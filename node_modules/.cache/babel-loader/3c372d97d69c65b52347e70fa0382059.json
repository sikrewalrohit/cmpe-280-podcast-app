{"ast":null,"code":"var _jsxFileName = \"/Users/rohitsikrewal/Desktop/cmpe-280-podcast-app/src/components/Podcast/Podcast.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport NavBar from \"@/components/NavBar/NavBar\";\nimport EpisodeList from \"./EpisodeList\";\nimport EpisodeListItem from \"./EpisodeListItem\";\nimport PodcastInfo from \"./PodcastInfo\";\nimport subscriptionsService from \"@/services/subscriptionsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Podcast extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      podcast: {},\n      numEpisodes: 50,\n      isLoading: true,\n      snackbar: {\n        open: false,\n        message: \"\"\n      }\n    };\n\n    this.fetchMore = async limit => {\n      try {\n        const {\n          episodes\n        } = await subscriptionsService.getSubscriptionById(this.props.match.params.id, limit);\n        this.setState(state => ({\n          podcast: { ...state.podcast,\n            episodes\n          },\n          numEpisodes: limit\n        }));\n      } catch (err) {\n        this.handleSnackbarOpen(err);\n      } finally {\n        if (window.location.hash !== \"#/rate_limit\") {\n          this.props.history.replace(`/podcast/${this.state.podcast._id}?limit=${limit}`);\n        }\n      }\n    };\n\n    this.handleShowMoreClicked = () => {\n      const params = new URLSearchParams(this.props.history.location.search);\n      const limit = (+params.get(\"limit\") || this.state.numEpisodes) + 100;\n      this.fetchMore(limit);\n    };\n\n    this.handleSubscribe = async () => {\n      try {\n        if (this.state.podcast.isSubscribed) {\n          await subscriptionsService.removeSubscription(this.state.podcast._id);\n          this.setState(state => ({\n            podcast: { ...state.podcast,\n              isSubscribed: false,\n              subscriberCount: state.podcast.subscriberCount - 1\n            }\n          }));\n        } else {\n          // Re-subscribe\n          const result = await subscriptionsService.addSubscription(this.state.podcast.feedUrl);\n          this.setState(state => ({\n            podcast: { ...state.podcast,\n              ...result,\n              isSubscribed: true\n            }\n          }));\n        }\n      } catch (err) {\n        this.handleSnackbarOpen(err);\n      }\n    };\n\n    this.handleSnackbarOpen = message => {\n      this.setState({\n        snackbar: {\n          open: true,\n          message: `Error: ${message}.`\n        }\n      });\n    };\n\n    this.handleSnackbarClose = () => {\n      this.setState({\n        snackbar: {\n          open: false,\n          message: \"\"\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const params = new URLSearchParams(this.props.history.location.search);\n    let limit = Number(params.get(\"limit\"));\n\n    if (!limit || limit <= 0) {\n      limit = this.state.numEpisodes;\n    }\n\n    subscriptionsService.getSubscriptionById(this.props.match.params.id, limit).then(podcast => {\n      this.setState({\n        podcast,\n        numEpisodes: limit\n      });\n    }).catch(this.handleSnackbarOpen).finally(() => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = new URLSearchParams(this.props.location.search);\n    const limit = +params.get(\"limit\");\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevLimit = +prevParams.get(\"limit\");\n\n    if (limit && limit !== prevLimit) {\n      this.setState({\n        numEpisodes: limit\n      }, () => this.fetchMore(limit));\n    }\n  }\n\n  render() {\n    // If the title was passed as a prop use that, otherwise wait until `componentDidMount()` updates the state.\n    const navTitle = this.props.location.state.title || this.state.podcast.title;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        title: navTitle,\n        isLoading: this.state.isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [Object.entries(this.state.podcast).length ? /*#__PURE__*/_jsxDEV(PodcastInfo, { ...this.state.podcast,\n          onSubscribe: this.handleSubscribe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(EpisodeList, {\n          numEpisodes: this.state.numEpisodes,\n          onShowMore: this.handleShowMoreClicked,\n          children: this.state.podcast.episodes.map((episode, i) => /*#__PURE__*/_jsxDEV(EpisodeListItem, {\n            episode: episode,\n            id: this.state.podcast._id,\n            podcastTitle: this.state.podcast.title,\n            artwork: this.state.podcast.artwork\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: this.state.snackbar.open,\n        message: this.state.snackbar.message,\n        onClose: this.handleSnackbarClose,\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          onClick: this.handleSnackbarClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Podcast);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Button","Container","Snackbar","NavBar","EpisodeList","EpisodeListItem","PodcastInfo","subscriptionsService","Podcast","state","podcast","numEpisodes","isLoading","snackbar","open","message","fetchMore","limit","episodes","getSubscriptionById","props","match","params","id","setState","err","handleSnackbarOpen","window","location","hash","history","replace","_id","handleShowMoreClicked","URLSearchParams","search","get","handleSubscribe","isSubscribed","removeSubscription","subscriberCount","result","addSubscription","feedUrl","handleSnackbarClose","componentDidMount","Number","then","catch","finally","componentDidUpdate","prevProps","prevParams","prevLimit","render","navTitle","title","Object","entries","length","map","episode","i","artwork","vertical","horizontal"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast-app/src/components/Podcast/Podcast.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport NavBar from \"@/components/NavBar/NavBar\";\nimport EpisodeList from \"./EpisodeList\";\nimport EpisodeListItem from \"./EpisodeListItem\";\nimport PodcastInfo from \"./PodcastInfo\";\n\nimport subscriptionsService from \"@/services/subscriptionsService\";\n\nclass Podcast extends Component {\n  state = {\n    podcast: {},\n    numEpisodes: 50,\n    isLoading: true,\n    snackbar: {\n      open: false,\n      message: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const params = new URLSearchParams(this.props.history.location.search);\n    let limit = Number(params.get(\"limit\"));\n\n    if (!limit || limit <= 0) {\n      limit = this.state.numEpisodes;\n    }\n\n    subscriptionsService\n      .getSubscriptionById(this.props.match.params.id, limit)\n      .then((podcast) => {\n        this.setState({\n          podcast,\n          numEpisodes: limit,\n        });\n      })\n      .catch(this.handleSnackbarOpen)\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = new URLSearchParams(this.props.location.search);\n    const limit = +params.get(\"limit\");\n\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevLimit = +prevParams.get(\"limit\");\n\n    if (limit && limit !== prevLimit) {\n      this.setState({ numEpisodes: limit }, () => this.fetchMore(limit));\n    }\n  }\n\n  render() {\n    // If the title was passed as a prop use that, otherwise wait until `componentDidMount()` updates the state.\n    const navTitle = this.props.location.state.title || this.state.podcast.title;\n\n    return (\n      <React.Fragment>\n        <NavBar title={navTitle} isLoading={this.state.isLoading} />\n\n        <Container maxWidth=\"lg\">\n          {/* Only display the PodcastInfo component if `this.state.podcast` is not an empty object. */}\n          {Object.entries(this.state.podcast).length ? (\n            <PodcastInfo {...this.state.podcast} onSubscribe={this.handleSubscribe} />\n          ) : null}\n\n          <EpisodeList numEpisodes={this.state.numEpisodes} onShowMore={this.handleShowMoreClicked}>\n            {this.state.podcast.episodes.map((episode, i) => (\n              <EpisodeListItem\n                key={i}\n                episode={episode}\n                id={this.state.podcast._id}\n                podcastTitle={this.state.podcast.title}\n                artwork={this.state.podcast.artwork}\n              />\n            ))}\n          </EpisodeList>\n        </Container>\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbar.open}\n          message={this.state.snackbar.message}\n          onClose={this.handleSnackbarClose}\n          action={\n            <Button color=\"secondary\" size=\"small\" onClick={this.handleSnackbarClose}>\n              OK\n            </Button>\n          }\n        />\n      </React.Fragment>\n    );\n  }\n\n  fetchMore = async (limit) => {\n    try {\n      const { episodes } = await subscriptionsService.getSubscriptionById(\n        this.props.match.params.id,\n        limit\n      );\n\n      this.setState((state) => ({\n        podcast: {\n          ...state.podcast,\n          episodes,\n        },\n        numEpisodes: limit,\n      }));\n    } catch (err) {\n      this.handleSnackbarOpen(err);\n    } finally {\n      if (window.location.hash !== \"#/rate_limit\") {\n        this.props.history.replace(`/podcast/${this.state.podcast._id}?limit=${limit}`);\n      }\n    }\n  };\n\n  // Display another 100 episodes whenever the \"Show More\" button is clicked\n  handleShowMoreClicked = () => {\n    const params = new URLSearchParams(this.props.history.location.search);\n    const limit = (+params.get(\"limit\") || this.state.numEpisodes) + 100;\n    this.fetchMore(limit);\n  };\n\n  handleSubscribe = async () => {\n    try {\n      if (this.state.podcast.isSubscribed) {\n        await subscriptionsService.removeSubscription(this.state.podcast._id);\n\n        this.setState((state) => ({\n          podcast: {\n            ...state.podcast,\n            isSubscribed: false,\n            subscriberCount: state.podcast.subscriberCount - 1,\n          },\n        }));\n      } else {\n        // Re-subscribe\n        const result = await subscriptionsService.addSubscription(this.state.podcast.feedUrl);\n\n        this.setState((state) => ({\n          podcast: {\n            ...state.podcast,\n            ...result,\n            isSubscribed: true,\n          },\n        }));\n      }\n    } catch (err) {\n      this.handleSnackbarOpen(err);\n    }\n  };\n\n  handleSnackbarOpen = (message) => {\n    this.setState({\n      snackbar: {\n        open: true,\n        message: `Error: ${message}.`,\n      },\n    });\n  };\n\n  handleSnackbarClose = () => {\n    this.setState({\n      snackbar: {\n        open: false,\n        message: \"\",\n      },\n    });\n  };\n}\n\nexport default withRouter(Podcast);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}