{"ast":null,"code":"var _jsxFileName = \"/Users/rohitsikrewal/Desktop/cmpe-280-podcast/src/components/Player/SeekBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Box from \"@mui/material/Box\";\nimport Slider from \"@mui/material/Slider\";\nimport Typography from \"@mui/material/Typography\";\nimport NowPlayingContext from \"@/store/nowPlayingContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  progressSlider: {\n    width: \"90%\",\n    display: \"block\",\n    margin: \"auto\"\n  }\n});\n\nfunction SeekBar(_ref) {\n  _s();\n\n  let {\n    currentTime,\n    duration,\n    onSliderChange,\n    ...props\n  } = _ref;\n  const classes = useStyles();\n  const {\n    epTitle,\n    podTitle\n  } = useContext(NowPlayingContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flexGrow: 1,\n    paddingX: 5,\n    paddingTop: 2,\n    paddingBottom: 3,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      marginBottom: 1,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h6\",\n        variant: \"h6\",\n        noWrap: true,\n        children: epTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"subtitle2\",\n        noWrap: true,\n        children: podTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      className: classes.progressSlider,\n      defaultValue: 0,\n      value: currentTime / duration * 100 || 0,\n      marks: [{\n        value: 0,\n        label: formatSeconds(currentTime)\n      }, {\n        value: 100,\n        label: formatSeconds(duration)\n      }],\n      onChange: onSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n/* Converts from seconds to HH:MM:SS. Necessary since the HTML <audio> element times (currentTime & duration) are in seconds.\n * Based on this S.O. answer: https://stackoverflow.com/a/37096512\n */\n\n\n_s(SeekBar, \"igAEKxpYz+Z2jXcG5BiCRXrIXIg=\", false, function () {\n  return [useStyles];\n});\n\n_c = SeekBar;\n\nfunction formatSeconds(secs) {\n  if (Number.isNaN(secs)) return \"00:00\";\n  const h = String(Math.floor(secs / 3600)).padStart(2, \"0\");\n  const m = String(Math.floor(secs % 3600 / 60)).padStart(2, \"0\");\n  const s = String(Math.floor(secs % 3600 % 60)).padStart(2, \"0\");\n\n  if (h === \"00\") {\n    return `${m}:${s}`;\n  }\n\n  return `${h}:${m}:${s}`;\n}\n\nSeekBar.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  onSliderChange: PropTypes.func.isRequired\n};\nexport default SeekBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeekBar\");","map":{"version":3,"names":["React","useContext","PropTypes","makeStyles","Box","Slider","Typography","NowPlayingContext","useStyles","progressSlider","width","display","margin","SeekBar","currentTime","duration","onSliderChange","props","classes","epTitle","podTitle","value","label","formatSeconds","secs","Number","isNaN","h","String","Math","floor","padStart","m","s","propTypes","number","isRequired","func"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast/src/components/Player/SeekBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Box from \"@mui/material/Box\";\nimport Slider from \"@mui/material/Slider\";\nimport Typography from \"@mui/material/Typography\";\n\nimport NowPlayingContext from \"@/store/nowPlayingContext\";\n\nconst useStyles = makeStyles({\n  progressSlider: {\n    width: \"90%\",\n    display: \"block\",\n    margin: \"auto\",\n  },\n});\n\nfunction SeekBar({ currentTime, duration, onSliderChange, ...props }) {\n  const classes = useStyles();\n  const { epTitle, podTitle } = useContext(NowPlayingContext);\n\n  return (\n    <Box flexGrow={1} paddingX={5} paddingTop={2} paddingBottom={3}>\n      <Box marginBottom={1}>\n        <Typography component=\"h6\" variant=\"h6\" noWrap>\n          {epTitle}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"subtitle2\" noWrap>\n          {podTitle}\n        </Typography>\n      </Box>\n\n      <Slider\n        className={classes.progressSlider}\n        defaultValue={0}\n        value={(currentTime / duration) * 100 || 0}\n        marks={[\n          {\n            value: 0,\n            label: formatSeconds(currentTime),\n          },\n          {\n            value: 100,\n            label: formatSeconds(duration),\n          },\n        ]}\n        onChange={onSliderChange}\n      />\n    </Box>\n  );\n}\n\n/* Converts from seconds to HH:MM:SS. Necessary since the HTML <audio> element times (currentTime & duration) are in seconds.\n * Based on this S.O. answer: https://stackoverflow.com/a/37096512\n */\nfunction formatSeconds(secs) {\n  if (Number.isNaN(secs)) return \"00:00\";\n\n  const h = String(Math.floor(secs / 3600)).padStart(2, \"0\");\n  const m = String(Math.floor((secs % 3600) / 60)).padStart(2, \"0\");\n  const s = String(Math.floor((secs % 3600) % 60)).padStart(2, \"0\");\n\n  if (h === \"00\") {\n    return `${m}:${s}`;\n  }\n  return `${h}:${m}:${s}`;\n}\n\nSeekBar.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  onSliderChange: PropTypes.func.isRequired,\n};\n\nexport default SeekBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}