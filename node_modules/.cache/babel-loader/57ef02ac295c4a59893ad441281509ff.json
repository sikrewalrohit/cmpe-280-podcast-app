{"ast":null,"code":"import axios from \"@/config/axios\";\n\nclass AuthService {\n  async login(_ref) {\n    let {\n      email,\n      password\n    } = _ref;\n    const response = await axios.post(`/api/login`, {\n      email,\n      password\n    });\n    return response.data;\n  }\n\n  async register(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    await axios.post(`/api/register`, {\n      email,\n      password\n    });\n    return await this.login({\n      email,\n      password\n    });\n  }\n\n  async updatePassword(_ref3) {\n    let {\n      oldPassword,\n      password\n    } = _ref3;\n    return await axios.put(`/api/password_reset`, {\n      oldPassword,\n      password\n    });\n  }\n\n  async updateEmail(_ref4) {\n    let {\n      email,\n      userId\n    } = _ref4;\n    return await axios.put(`/api/users/${userId}`, {\n      email\n    });\n  }\n\n  async deleteAccount(_ref5) {\n    let {\n      email,\n      password,\n      userId\n    } = _ref5;\n    await this.login({\n      email,\n      password\n    });\n    return await axios.delete(`/api/users/${userId}`, {\n      email,\n      password\n    });\n  }\n\n  async getProfile(userId) {\n    const response = await axios.get(`/api/users/${userId}`);\n    return response.data;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"names":["axios","AuthService","login","email","password","response","post","data","register","updatePassword","oldPassword","put","updateEmail","userId","deleteAccount","delete","getProfile","get"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast/src/services/authService.js"],"sourcesContent":["import axios from \"@/config/axios\";\n\nclass AuthService {\n  async login({ email, password }) {\n    const response = await axios.post(`/api/login`, {\n      email,\n      password,\n    });\n\n    return response.data;\n  }\n\n  async register({ email, password }) {\n    await axios.post(`/api/register`, {\n      email,\n      password,\n    });\n\n    return await this.login({ email, password });\n  }\n\n  async updatePassword({ oldPassword, password }) {\n    return await axios.put(`/api/password_reset`, {\n      oldPassword,\n      password,\n    });\n  }\n\n  async updateEmail({ email, userId }) {\n    return await axios.put(`/api/users/${userId}`, {\n      email,\n    });\n  }\n\n  async deleteAccount({ email, password, userId }) {\n    await this.login({ email, password });\n\n    return await axios.delete(`/api/users/${userId}`, {\n      email,\n      password,\n    });\n  }\n\n  async getProfile(userId) {\n    const response = await axios.get(`/api/users/${userId}`);\n    return response.data;\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAN,CAAkB;EACL,MAALC,KAAK,OAAsB;IAAA,IAArB;MAAEC,KAAF;MAASC;IAAT,CAAqB;IAC/B,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAY,YAAZ,EAAyB;MAC9CH,KAD8C;MAE9CC;IAF8C,CAAzB,CAAvB;IAKA,OAAOC,QAAQ,CAACE,IAAhB;EACD;;EAEa,MAARC,QAAQ,QAAsB;IAAA,IAArB;MAAEL,KAAF;MAASC;IAAT,CAAqB;IAClC,MAAMJ,KAAK,CAACM,IAAN,CAAY,eAAZ,EAA4B;MAChCH,KADgC;MAEhCC;IAFgC,CAA5B,CAAN;IAKA,OAAO,MAAM,KAAKF,KAAL,CAAW;MAAEC,KAAF;MAASC;IAAT,CAAX,CAAb;EACD;;EAEmB,MAAdK,cAAc,QAA4B;IAAA,IAA3B;MAAEC,WAAF;MAAeN;IAAf,CAA2B;IAC9C,OAAO,MAAMJ,KAAK,CAACW,GAAN,CAAW,qBAAX,EAAiC;MAC5CD,WAD4C;MAE5CN;IAF4C,CAAjC,CAAb;EAID;;EAEgB,MAAXQ,WAAW,QAAoB;IAAA,IAAnB;MAAET,KAAF;MAASU;IAAT,CAAmB;IACnC,OAAO,MAAMb,KAAK,CAACW,GAAN,CAAW,cAAaE,MAAO,EAA/B,EAAkC;MAC7CV;IAD6C,CAAlC,CAAb;EAGD;;EAEkB,MAAbW,aAAa,QAA8B;IAAA,IAA7B;MAAEX,KAAF;MAASC,QAAT;MAAmBS;IAAnB,CAA6B;IAC/C,MAAM,KAAKX,KAAL,CAAW;MAAEC,KAAF;MAASC;IAAT,CAAX,CAAN;IAEA,OAAO,MAAMJ,KAAK,CAACe,MAAN,CAAc,cAAaF,MAAO,EAAlC,EAAqC;MAChDV,KADgD;MAEhDC;IAFgD,CAArC,CAAb;EAID;;EAEe,MAAVY,UAAU,CAACH,MAAD,EAAS;IACvB,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAN,CAAW,cAAaJ,MAAO,EAA/B,CAAvB;IACA,OAAOR,QAAQ,CAACE,IAAhB;EACD;;AA5Ce;;AA+ClB,eAAe,IAAIN,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}