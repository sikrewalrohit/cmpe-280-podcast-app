{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport AuthContext from \"../store/authContext\";\nimport authService from \"../services/authService\";\n\nfunction useAuth() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const ctx = useContext(AuthContext);\n\n  const resetError = () => setError(\"\");\n\n  const _isValidForm = _ref => {\n    let {\n      email,\n      password,\n      confirmPassword\n    } = _ref;\n\n    if (password === \"\" || confirmPassword !== undefined && confirmPassword === \"\" || email !== undefined && email.trim().length === 0) {\n      setError(\"All fields are required.\");\n      return false;\n    } else if (confirmPassword !== undefined && password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const _authHandler = async (fields, callback) => {\n    if (!_isValidForm(fields)) {\n      return {\n        success: false,\n        data: null\n      };\n    }\n\n    try {\n      return await callback();\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.msg + \".\");\n      } else {\n        setError(\"An error occurred. Try again later.\");\n      }\n\n      return {\n        success: false,\n        data: null\n      };\n    }\n  };\n\n  const login = async _ref2 => {\n    let {\n      email,\n      password\n    } = _ref2;\n    return _authHandler({\n      email,\n      password\n    }, async () => {\n      const data = await authService.login({\n        email,\n        password\n      });\n      ctx.login(data.token);\n      return {\n        success: ctx.isAuthorized,\n        data\n      };\n    });\n  };\n\n  const register = async _ref3 => {\n    let {\n      email,\n      password,\n      confirmPassword\n    } = _ref3;\n    return _authHandler({\n      email,\n      password,\n      confirmPassword\n    }, async () => {\n      const data = await authService.register({\n        email,\n        password\n      });\n      ctx.login(data.token);\n      return {\n        success: ctx.isAuthorized,\n        data\n      };\n    });\n  };\n\n  const updateEmail = async _ref4 => {\n    let {\n      email\n    } = _ref4;\n    return _authHandler({\n      email\n    }, async () => {\n      const data = await authService.updateEmail({\n        email,\n        userId: ctx.userId\n      });\n      return {\n        success: data.status === 200,\n        data\n      };\n    });\n  };\n\n  const updatePassword = async _ref5 => {\n    let {\n      oldPassword,\n      password,\n      confirmPassword\n    } = _ref5;\n    return _authHandler({\n      password,\n      confirmPassword\n    }, async () => {\n      const data = await authService.updatePassword({\n        oldPassword,\n        password\n      });\n      return {\n        success: data.status === 200,\n        data\n      };\n    });\n  };\n\n  const deleteAccount = async _ref6 => {\n    let {\n      email,\n      password\n    } = _ref6;\n    return _authHandler({\n      email,\n      password\n    }, async () => {\n      const data = await authService.deleteAccount({\n        email,\n        password,\n        userId: ctx.userId\n      });\n      return {\n        success: data.status === 204,\n        data\n      };\n    });\n  };\n\n  return {\n    error,\n    resetError,\n    login,\n    register,\n    updateEmail,\n    updatePassword,\n    deleteAccount\n  };\n}\n\n_s(useAuth, \"WnPQHoAirA3lj5wYEIQVVawXzpU=\");\n\nexport default useAuth;","map":{"version":3,"names":["useState","useContext","AuthContext","authService","useAuth","error","setError","ctx","resetError","_isValidForm","email","password","confirmPassword","undefined","trim","length","_authHandler","fields","callback","success","data","err","response","msg","login","token","isAuthorized","register","updateEmail","userId","status","updatePassword","oldPassword","deleteAccount"],"sources":["/Users/rohitsikrewal/Desktop/cmpe-280-podcast/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useContext } from \"react\";\n\nimport AuthContext from \"../store/authContext\";\nimport authService from \"../services/authService\";\n\nfunction useAuth() {\n  const [error, setError] = useState(\"\");\n\n  const ctx = useContext(AuthContext);\n\n  const resetError = () => setError(\"\");\n\n  const _isValidForm = ({ email, password, confirmPassword }) => {\n    if (\n      password === \"\" ||\n      (confirmPassword !== undefined && confirmPassword === \"\") ||\n      (email !== undefined && email.trim().length === 0)\n    ) {\n      setError(\"All fields are required.\");\n      return false;\n    } else if (confirmPassword !== undefined && password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return false;\n    }\n    return true;\n  };\n\n  const _authHandler = async (fields, callback) => {\n    if (!_isValidForm(fields)) {\n      return {\n        success: false,\n        data: null,\n      };\n    }\n\n    try {\n      return await callback();\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.msg + \".\");\n      } else {\n        setError(\"An error occurred. Try again later.\");\n      }\n\n      return {\n        success: false,\n        data: null,\n      };\n    }\n  };\n\n  const login = async ({ email, password }) => {\n    return _authHandler({ email, password }, async () => {\n      const data = await authService.login({ email, password });\n\n      ctx.login(data.token);\n\n      return {\n        success: ctx.isAuthorized,\n        data,\n      };\n    });\n  };\n\n  const register = async ({ email, password, confirmPassword }) => {\n    return _authHandler({ email, password, confirmPassword }, async () => {\n      const data = await authService.register({ email, password });\n\n      ctx.login(data.token);\n\n      return {\n        success: ctx.isAuthorized,\n        data,\n      };\n    });\n  };\n\n  const updateEmail = async ({ email }) => {\n    return _authHandler({ email }, async () => {\n      const data = await authService.updateEmail({\n        email,\n        userId: ctx.userId,\n      });\n\n      return {\n        success: data.status === 200,\n        data,\n      };\n    });\n  };\n\n  const updatePassword = async ({ oldPassword, password, confirmPassword }) => {\n    return _authHandler({ password, confirmPassword }, async () => {\n      const data = await authService.updatePassword({\n        oldPassword,\n        password,\n      });\n\n      return {\n        success: data.status === 200,\n        data,\n      };\n    });\n  };\n\n  const deleteAccount = async ({ email, password }) => {\n    return _authHandler({ email, password }, async () => {\n      const data = await authService.deleteAccount({\n        email,\n        password,\n        userId: ctx.userId,\n      });\n\n      return {\n        success: data.status === 204,\n        data,\n      };\n    });\n  };\n\n  return {\n    error,\n    resetError,\n    login,\n    register,\n    updateEmail,\n    updatePassword,\n    deleteAccount,\n  };\n}\n\nexport default useAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}